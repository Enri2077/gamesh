#include "ros/ros.h"

#include <gamesh_bridge/GameshRays.h>
#include <sensor_msgs/PointCloud2.h>
#include <geometry_msgs/PoseStamped.h>

#include <pcl/point_types.h>
#include <pcl/point_cloud.h>
#include <pcl_conversions/pcl_conversions.h>

#define GAMESH_RAYS_TOPIC "gamesh_rays"

void raysCallback(const gamesh_bridge::GameshRays::ConstPtr& msg) {
#	ROS_INFO("raysCallback");
	std::cout << "camera_pose: " << msg->camera_pose << std::endl;
}

int main(int argc, char **argv) {
	ros::init(argc, argv, "gamesh_node");
	ROS_INFO("Gamesh node initialised");
	
	ros::NodeHandle n;
	ros::Subscriber raysSubscriber = n.subscribe<gamesh_bridge::GameshRays> (GAMESH_RAYS_TOPIC, 1000, raysCallback);
	
	ros::spin();
	
	return 0;
}
